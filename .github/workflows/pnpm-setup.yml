name: Pnpm Setup

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
        default: .
      node-version:
        required: false
        type: string
      pnpm-version:
        required: false
        type: string
      package-json-file:
        required: false
        default: "package.json"
        type: string

jobs:
  setup:
    name: Setup Pnpm
    timeout-minutes: 15
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          node-version-file: ${{ inputs.package-json-file }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ inputs.pnpm-version }}
          package_json_file: ${{ inputs.package-json-file }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        id: cache-pnpm-store
        uses: actions/cache@v4
        env:
          cache-name: pnpm-store-cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}-

      - name: Install dependencies
        if: ${{ steps.cache-pnpm-store.outputs.cache-hit == 'false' }}
        run: pnpm install --frozen-lockfile